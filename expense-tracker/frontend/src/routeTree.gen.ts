/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as DashboardImport } from './routes/dashboard'
import { Route as TransactionmethodImport } from './routes/_transaction_method'
import { Route as IncomeImport } from './routes/_income'
import { Route as ExpenseImport } from './routes/_expense'
import { Route as EventsImport } from './routes/_events'
import { Route as ContactsImport } from './routes/_contacts'
import { Route as CategoryImport } from './routes/_category'
import { Route as TransactionmethodTransactionmethodImport } from './routes/_transaction_method/transaction_method'
import { Route as IncomeIncomeImport } from './routes/_income/income'
import { Route as ExpenseExpenseImport } from './routes/_expense/expense'
import { Route as EventsEventsImport } from './routes/_events/events'
import { Route as ContactsContactsImport } from './routes/_contacts/contacts'
import { Route as CategoryCategoryImport } from './routes/_category/category'

// Create Virtual Routes

const AboutLazyImport = createFileRoute('/about')()
const IndexLazyImport = createFileRoute('/')()
const PostsIndexLazyImport = createFileRoute('/posts/')()
const PostsPostsIdLazyImport = createFileRoute('/posts/$postsId')()

// Create/Update Routes

const AboutLazyRoute = AboutLazyImport.update({
  path: '/about',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/about.lazy').then((d) => d.Route))

const DashboardRoute = DashboardImport.update({
  path: '/dashboard',
  getParentRoute: () => rootRoute,
} as any)

const TransactionmethodRoute = TransactionmethodImport.update({
  id: '/_transaction_method',
  getParentRoute: () => rootRoute,
} as any)

const IncomeRoute = IncomeImport.update({
  id: '/_income',
  getParentRoute: () => rootRoute,
} as any)

const ExpenseRoute = ExpenseImport.update({
  id: '/_expense',
  getParentRoute: () => rootRoute,
} as any)

const EventsRoute = EventsImport.update({
  id: '/_events',
  getParentRoute: () => rootRoute,
} as any)

const ContactsRoute = ContactsImport.update({
  id: '/_contacts',
  getParentRoute: () => rootRoute,
} as any)

const CategoryRoute = CategoryImport.update({
  id: '/_category',
  getParentRoute: () => rootRoute,
} as any)

const IndexLazyRoute = IndexLazyImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const PostsIndexLazyRoute = PostsIndexLazyImport.update({
  path: '/posts/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/posts/index.lazy').then((d) => d.Route))

const PostsPostsIdLazyRoute = PostsPostsIdLazyImport.update({
  path: '/posts/$postsId',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/posts/$postsId.lazy').then((d) => d.Route),
)

const TransactionmethodTransactionmethodRoute =
  TransactionmethodTransactionmethodImport.update({
    path: '/transaction_method',
    getParentRoute: () => TransactionmethodRoute,
  } as any)

const IncomeIncomeRoute = IncomeIncomeImport.update({
  path: '/income',
  getParentRoute: () => IncomeRoute,
} as any)

const ExpenseExpenseRoute = ExpenseExpenseImport.update({
  path: '/expense',
  getParentRoute: () => ExpenseRoute,
} as any)

const EventsEventsRoute = EventsEventsImport.update({
  path: '/events',
  getParentRoute: () => EventsRoute,
} as any)

const ContactsContactsRoute = ContactsContactsImport.update({
  path: '/contacts',
  getParentRoute: () => ContactsRoute,
} as any)

const CategoryCategoryRoute = CategoryCategoryImport.update({
  path: '/category',
  getParentRoute: () => CategoryRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/_category': {
      preLoaderRoute: typeof CategoryImport
      parentRoute: typeof rootRoute
    }
    '/_contacts': {
      preLoaderRoute: typeof ContactsImport
      parentRoute: typeof rootRoute
    }
    '/_events': {
      preLoaderRoute: typeof EventsImport
      parentRoute: typeof rootRoute
    }
    '/_expense': {
      preLoaderRoute: typeof ExpenseImport
      parentRoute: typeof rootRoute
    }
    '/_income': {
      preLoaderRoute: typeof IncomeImport
      parentRoute: typeof rootRoute
    }
    '/_transaction_method': {
      preLoaderRoute: typeof TransactionmethodImport
      parentRoute: typeof rootRoute
    }
    '/dashboard': {
      preLoaderRoute: typeof DashboardImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      preLoaderRoute: typeof AboutLazyImport
      parentRoute: typeof rootRoute
    }
    '/_category/category': {
      preLoaderRoute: typeof CategoryCategoryImport
      parentRoute: typeof CategoryImport
    }
    '/_contacts/contacts': {
      preLoaderRoute: typeof ContactsContactsImport
      parentRoute: typeof ContactsImport
    }
    '/_events/events': {
      preLoaderRoute: typeof EventsEventsImport
      parentRoute: typeof EventsImport
    }
    '/_expense/expense': {
      preLoaderRoute: typeof ExpenseExpenseImport
      parentRoute: typeof ExpenseImport
    }
    '/_income/income': {
      preLoaderRoute: typeof IncomeIncomeImport
      parentRoute: typeof IncomeImport
    }
    '/_transaction_method/transaction_method': {
      preLoaderRoute: typeof TransactionmethodTransactionmethodImport
      parentRoute: typeof TransactionmethodImport
    }
    '/posts/$postsId': {
      preLoaderRoute: typeof PostsPostsIdLazyImport
      parentRoute: typeof rootRoute
    }
    '/posts/': {
      preLoaderRoute: typeof PostsIndexLazyImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export const routeTree = rootRoute.addChildren([
  IndexLazyRoute,
  CategoryRoute.addChildren([CategoryCategoryRoute]),
  ContactsRoute.addChildren([ContactsContactsRoute]),
  EventsRoute.addChildren([EventsEventsRoute]),
  ExpenseRoute.addChildren([ExpenseExpenseRoute]),
  IncomeRoute.addChildren([IncomeIncomeRoute]),
  TransactionmethodRoute.addChildren([TransactionmethodTransactionmethodRoute]),
  DashboardRoute,
  AboutLazyRoute,
  PostsPostsIdLazyRoute,
  PostsIndexLazyRoute,
])

/* prettier-ignore-end */
